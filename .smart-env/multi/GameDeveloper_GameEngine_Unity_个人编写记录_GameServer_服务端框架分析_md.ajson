
"smart_sources:GameDeveloper/GameEngine/Unity/个人编写记录/GameServer/服务端框架分析.md": {"path":"GameDeveloper/GameEngine/Unity/个人编写记录/GameServer/服务端框架分析.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"56e5266dd2e4209acc6d12c0f262751abb0795507cdcac349801b596f6fe9485","at":1747299380059},"class_name":"SmartSource","last_import":{"mtime":1745420218832,"size":11378,"at":1747299380059,"hash":"56e5266dd2e4209acc6d12c0f262751abb0795507cdcac349801b596f6fe9485"},"blocks":{"#服务端框架分析":[1,364],"#服务端框架分析#服务端框架":[3,14],"#服务端框架分析#服务端框架#{1}":[5,6],"#服务端框架分析#服务端框架#{2}":[7,7],"#服务端框架分析#服务端框架#{3}":[8,8],"#服务端框架分析#服务端框架#{4}":[9,9],"#服务端框架分析#服务端框架#{5}":[10,10],"#服务端框架分析#服务端框架#{6}":[11,12],"#服务端框架分析#服务端框架#{7}":[13,14],"#服务端框架分析#NetManager 网络管理者":[15,201],"#服务端框架分析#NetManager 网络管理者#{1}":[16,16],"#服务端框架分析#NetManager 网络管理者#{2}":[17,17],"#服务端框架分析#NetManager 网络管理者#{3}":[18,18],"#服务端框架分析#NetManager 网络管理者#{4}":[19,19],"#服务端框架分析#NetManager 网络管理者#{5}":[20,21],"#服务端框架分析#NetManager 网络管理者#{6}":[22,25],"#服务端框架分析#NetManager 网络管理者#loop核心循环代码":[26,63],"#服务端框架分析#NetManager 网络管理者#loop核心循环代码#{1}":[27,63],"#服务端框架分析#NetManager 网络管理者#Send 发送消息":[64,109],"#服务端框架分析#NetManager 网络管理者#Send 发送消息#{1}":[65,109],"#服务端框架分析#NetManager 网络管理者#OnReceiveData 处理接收到的数据":[110,201],"#服务端框架分析#NetManager 网络管理者#OnReceiveData 处理接收到的数据#{1}":[111,197],"#服务端框架分析#NetManager 网络管理者#OnReceiveData 处理接收到的数据#什么是套接字的多路复用  Socket.Select()":[198,201],"#服务端框架分析#消息协议 proto":[202,275],"#服务端框架分析#消息协议 proto#{1}":[203,206],"#服务端框架分析#消息协议 proto#MsgBase消息基类":[207,275],"#服务端框架分析#消息协议 proto#MsgBase消息基类#{1}":[208,275],"#服务端框架分析#游戏逻辑处理 logic":[276,364],"#服务端框架分析#游戏逻辑处理 logic#EventHandler 事件处理":[278,335],"#服务端框架分析#游戏逻辑处理 logic#EventHandler 事件处理#{1}":[279,320],"#服务端框架分析#游戏逻辑处理 logic#EventHandler 事件处理#如何调用事件处理函数":[321,335],"#服务端框架分析#游戏逻辑处理 logic#EventHandler 事件处理#如何调用事件处理函数#{1}":[322,335],"#服务端框架分析#游戏逻辑处理 logic#MsgHandler 消息处理":[336,363],"#服务端框架分析#游戏逻辑处理 logic#MsgHandler 消息处理#{1}":[337,363],"#服务端框架分析#游戏逻辑处理 logic#服务器是如何处理消息转发的":[364,364]},"outlinks":[]},